version: "3.9"
volumes:
  postgres_data:
    driver: local
services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
  web:
    build: .  # act on Dockerfile in current dir
    ports:
      - "8007:8000"
    environment:  &app_envvars
      - ALLOWED_HOSTS  # values will come from .env
      - CELERY_BROKER_URL
      - DJANGO_SUPERUSER_EMAIL
      - EMAIL_PORT
      - EMAIL_HOST
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PYTHONDEBUG
      - PYTHONDONTWRITEBYTECODE=1  # no .pyc
      - PYTHONUNBUFFERED=1 # no buffering stdout/stderr so Django logs are real time into container console
    depends_on:
      - db  # cannot start if db service is not up and running
      - broker
    links:
      - broker
      - db
  mail:
    image: "mailhog/mailhog:v1.0.1"
    ports:
      - "1025:1025"
      - "8025:8025"
  broker:
    image: "rabbitmq:3.9.13-management"
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
    ports:
      - "5672:5672"    # queue
      - "15672:15672"  # Web UI: http://container-ip:15672
  worker:
    build:
      context: .
    command: celery -A tasks worker --loglevel=info
    environment:  *app_envvars
    links:
      - broker
    depends_on:
      - broker
